<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>10_ssm</display-name>

	<!-- 编码过滤器开始 -->
	<filter>
		<filter-name>charset</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>charset</filter-name>
		<!-- <url-pattern>*.action</url-pattern> -->
		<servlet-name>springmvc</servlet-name>
	</filter-mapping>
	<!-- 编码过滤器结束 -->

	<!-- 配置spring容器的监听器 开始
	
	 目地：在启用tomcat的时候加载 applicationContext.xml 
	ApplicationContext context=new ClassPathXmlApplicationContext("classpath:applicationContext.xml')
	-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 配置上下文的参数  contextConfigLocation
	在org.springframework.web.context.ContextLoader里面-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	<!-- 配置spring容器的监听器 结束-->
	<!-- 配置前端控制器开始 -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!--配置contextConfigLocation -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
		<!-- load-on-startup 1 代表当tomcat启动加web.xml里就创建 DispatcherServlet的对象 -->
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<!-- *.action:所以的在xxxx.action结尾的请求都交给DispatcherServlet /* 所以的请求都交给DispacherServlet 
			包含静态文件的地址 js css png gif |不推荐使用 / 所以访问的地址都由DispatcherServlet进行解析，对于静态文件的解析需要配置不让DispatcherServlet进行解析 
			使用此种方式可以实现 RESTful风格的url -->
		<url-pattern>*.action</url-pattern>
	</servlet-mapping>

	<!-- 配置前端控制器结束 -->


	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>